[{"/home/min/Programming/PocketMarket/frontend/src/index.tsx":"1","/home/min/Programming/PocketMarket/frontend/src/reportWebVitals.ts":"2","/home/min/Programming/PocketMarket/frontend/src/App.tsx":"3","/home/min/Programming/PocketMarket/frontend/src/apollo.ts":"4","/home/min/Programming/PocketMarket/frontend/src/routers/logged-in-router.tsx":"5","/home/min/Programming/PocketMarket/frontend/src/routers/logged-out-router.tsx":"6","/home/min/Programming/PocketMarket/frontend/src/pages/login.tsx":"7","/home/min/Programming/PocketMarket/frontend/src/pages/create-account.tsx":"8","/home/min/Programming/PocketMarket/frontend/src/components/form-error.tsx":"9","/home/min/Programming/PocketMarket/frontend/src/components/button.tsx":"10","/home/min/Programming/PocketMarket/frontend/src/constants.ts":"11","/home/min/Programming/PocketMarket/frontend/src/types/globalTypes.ts":"12","/home/min/Programming/PocketMarket/frontend/src/pages/404.tsx":"13","/home/min/Programming/PocketMarket/frontend/src/pages/client/restaurants.tsx":"14","/home/min/Programming/PocketMarket/frontend/src/components/header.tsx":"15","/home/min/Programming/PocketMarket/frontend/src/hooks/useLoggedInUser.tsx":"16","/home/min/Programming/PocketMarket/frontend/src/pages/user/confirm-email.tsx":"17"},{"size":775,"mtime":1620907054511,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1615000286777,"results":"20","hashOfConfig":"19"},{"size":420,"mtime":1615456723170,"results":"21","hashOfConfig":"19"},{"size":1161,"mtime":1621076478671,"results":"22","hashOfConfig":"19"},{"size":1192,"mtime":1621505174624,"results":"23","hashOfConfig":"19"},{"size":659,"mtime":1621150645887,"results":"24","hashOfConfig":"19"},{"size":3758,"mtime":1621222259587,"results":"25","hashOfConfig":"19"},{"size":6038,"mtime":1621148819744,"results":"26","hashOfConfig":"19"},{"size":241,"mtime":1615525200670,"results":"27","hashOfConfig":"19"},{"size":460,"mtime":1620117607315,"results":"28","hashOfConfig":"19"},{"size":43,"mtime":1620906130164,"results":"29","hashOfConfig":"19"},{"size":967,"mtime":1621508785247,"results":"30","hashOfConfig":"19"},{"size":634,"mtime":1621150170074,"results":"31","hashOfConfig":"19"},{"size":117,"mtime":1621508375550,"results":"32","hashOfConfig":"19"},{"size":1169,"mtime":1621504653190,"results":"33","hashOfConfig":"19"},{"size":386,"mtime":1621495404641,"results":"34","hashOfConfig":"19"},{"size":1089,"mtime":1621508778117,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"k28vu7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/min/Programming/PocketMarket/frontend/src/index.tsx",[],["72","73"],"/home/min/Programming/PocketMarket/frontend/src/reportWebVitals.ts",[],"/home/min/Programming/PocketMarket/frontend/src/App.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/apollo.ts",[],"/home/min/Programming/PocketMarket/frontend/src/routers/logged-in-router.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/routers/logged-out-router.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/pages/login.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/pages/create-account.tsx",["74","75"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { gql, useMutation } from '@apollo/client';\nimport { useForm } from 'react-hook-form';\nimport { FormError } from '../components/form-error';\nimport { Gender, UserRole } from '../types/globalTypes';\nimport { Button } from '../components/button';\nimport {\n    CreateAccountMutation,\n    CreateAccountMutationVariables,\n} from '../types/CreateAccountMutation';\n\ninterface ICreateAccountForm {\n    email: string;\n    nickname: string;\n    password: string;\n    gender: Gender;\n    birthday: Date;\n    profileImg: string;\n    phoneNumber: string;\n    role: UserRole;\n}\n\nconst CREATE_ACCOUNT_MUTATION = gql`\n    mutation CreateAccountMutation($createAccountInput: CreateAccountInput!) {\n        createAccount(input: $createAccountInput) {\n            accepted\n            error\n        }\n    }\n`;\n\nexport const CreateAccount = () => {\n    const { register, getValues, errors, handleSubmit, formState } = useForm<ICreateAccountForm>({\n        mode: \"onChange\",\n        defaultValues: {\n            role: UserRole.Client,\n            gender: Gender.Male,\n        }\n    });\n    const history = useHistory();\n    const onCompleted = (data: CreateAccountMutation) => {\n        const {\n            createAccount: {\n                accepted,\n            }\n        } = data;\n        if(accepted) {\n            // redirect to where?\n            alert(\"계정이 생성됐습니다. 로그인해주세요!\");\n            history.push(\"/\");\n        }\n    };\n    const [createAccountMutation, { loading, data: createAccountMutationResult }] = useMutation<CreateAccountMutation, CreateAccountMutationVariables>(CREATE_ACCOUNT_MUTATION, {\n        onCompleted,\n    });\n    const onSubmit = () => {\n        if(!loading) {\n            const { email, nickname, password, gender, birthday, profileImg, phoneNumber, role } = getValues();\n            createAccountMutation({\n                variables: {\n                    createAccountInput: {\n                        email,\n                        nickname,\n                        password,\n                        gender,\n                        birthday,\n                        profileImg,\n                        phoneNumber,\n                        role,\n                    },\n                }\n            })\n        }\n    };\n\n    return (\n        <div className=\"w-screen h-screen flex flex-col items-center justify-around\">\n            <Helmet>\n                <title>회원가입 | Pocket Market</title>\n            </Helmet>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"grid gap-3 px-5 w-full max-w-3xl\">\n                <input\n                    ref={register({\n                        required: \"이메일을 입력해주세요. \",\n                        pattern: {\n                            value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: \"이메일 형식으로 입력해주세요\",\n                        },\n                    })}\n                    name=\"email\"\n                    required\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"input\"\n                />\n                {\n                    errors.email?.message && (\n                        <FormError errorMessage={errors.email.message} />\n                    )\n                }\n                <input\n                    ref={register({ required: \"닉네임을 입력해주세요. \" })}\n                    name=\"nickname\"\n                    required\n                    type=\"nickname\"\n                    placeholder=\"Nickname\"\n                    className=\"input\"\n                />\n                {\n                    errors.nickname?.message && (\n                        <FormError errorMessage={errors.nickname.message} />\n                    )\n                }\n                <input\n                    ref={register({ required: \"비밀번호를 입력해주세요. \" })}\n                    name=\"password\"\n                    required\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"input\"\n                />\n                {\n                    errors.password?.message && (\n                        <FormError errorMessage={errors.password.message} />\n                    )\n                }\n                <input\n                    ref={register({ required: true })}\n                    name=\"birthday\"\n                    required\n                    type=\"date\"\n                    className=\"input\"\n                />\n                <input\n                    ref={register({ required: true })}\n                    name=\"phoneNumber\"\n                    required\n                    type=\"tel\"\n                    className=\"input\"\n                    placeholder=\"Phone Number\"\n                />\n                <select name=\"role\" ref={register({ required: true })} className=\"input\">\n                    <option>Client</option>\n                    <option>Owner</option>\n                </select>\n                <select name=\"gender\" ref={register({ required: true })} className=\"input\">\n                    {Object.keys(Gender).map((gender, index) => <option key={index}>{gender}</option>)}\n                </select>\n                <Button canClick={formState.isValid} loading={loading} actionText={\"회원가입하기\"} />\n                {\n                    createAccountMutationResult?.createAccount.error && (\n                        <FormError errorMessage={createAccountMutationResult.createAccount.error} />\n                    )\n                }\n                <div className=\"px-2\">이미 계정이 있으신가요? <Link to=\"/\" className=\"text-red-800 font-semibold text-lg hover:underline\">Sign in!</Link></div>\n            </form>\n        </div>\n    );\n};\n","/home/min/Programming/PocketMarket/frontend/src/components/form-error.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/components/button.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/constants.ts",[],"/home/min/Programming/PocketMarket/frontend/src/types/globalTypes.ts",[],"/home/min/Programming/PocketMarket/frontend/src/pages/404.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/pages/client/restaurants.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/components/header.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/hooks/useLoggedInUser.tsx",[],"/home/min/Programming/PocketMarket/frontend/src/pages/user/confirm-email.tsx",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":88,"column":46,"nodeType":"83","messageId":"84","endLine":88,"endColumn":47,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":88,"column":71,"nodeType":"83","messageId":"84","endLine":88,"endColumn":72,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":16,"column":37,"nodeType":"89","messageId":"90","endLine":16,"endColumn":51},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["93","94"],["95","96"],"@typescript-eslint/no-unused-vars","'verifyingEmail' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"97","fix":"98","desc":"99"},{"messageId":"100","fix":"101","desc":"102"},{"messageId":"97","fix":"103","desc":"99"},{"messageId":"100","fix":"104","desc":"102"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},[2843,2844],"",[2843,2843],"\\",[2868,2869],[2868,2868]]